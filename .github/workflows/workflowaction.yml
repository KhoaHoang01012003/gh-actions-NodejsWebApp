# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow integrates njsscan with GitHub's Code Scanning feature
# nodejsscan is a static security code scanner that finds insecure code patterns in your Node.js applications

name: FULL SCAN

on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '20 20 * * 5'

permissions:
  contents: read

jobs:

  # njsscan
  njsscan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    name: njsscan code scanning
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@7237412fdd36af517e2745077cedbf9d6900d711
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif

  # NPM Audit
  npmaudit:
    permissions: write-all
    name: npm audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19.0'
      - name: install bower
        run: npm install -g bower
      - run: bower install --allow-root
      - name: install dependencies
        run: npm install
      - uses: oke-py/npm-audit-action@v2
        with:
          audit_level: moderate
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_labels: vulnerability,test
          dedupe_issues: true
  
  # SAST Scan
  sast_scan:
    permissions: write-all
    name: SAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: SAST Scan
        uses: AppThreat/sast-scan-action@master
        with:
          type: "python"
      - name: Upload SAST reports
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: reports


  # Deploy container and ZAP Scan
  Deploy_container_and_ZAP_Scan:
    runs-on: ubuntu-latest
    name: Deploy container and scan with ZAP
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - name: run docker container
        run: |
          docker build -t vulnerable-app -f ./Dockerfile .
          docker run -d -p 8001:8001 vulnerable-app
          sleep 12
      - run: curl -I http://localhost:8001 || exit 1
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:8001'
          cmd_options: '-a'
          issue_title: 'ZAP Scan Report'


